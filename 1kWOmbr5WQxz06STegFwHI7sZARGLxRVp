{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "s8joWaZyxF_B"
   },
   "outputs": [],
   "source": [
    "# 512x832*57-> 48Gb VRAM without quantization\n",
    "# launch and downloads takes 9 min\n",
    "# remember to set 8188 as the exposed tunnel\n",
    "# all quantization methods for transformer model are not support for CUDA arch <=89 (supported for hopper data centre GPU and 40 series rtx)\n",
    "# each video takes 6.5 minutes to generate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "j7KkLhNQfxvr",
    "outputId": "144b007f-2d19-4d29-a550-922902967c7b"
   },
   "outputs": [],
   "source": [
    "# Set root path\n",
    "root=\"/workspace\"  # Change to \"/content\" if needed\n",
    "\n",
    "!pip install uv\n",
    "!git lfs install\n",
    "!apt -y update -qq\n",
    "!apt -y install -qq aria2\n",
    "\n",
    "!git clone https://github.com/comfyanonymous/ComfyUI\n",
    "\n",
    "!uv pip uninstall --system torch torchvision torchaudio\n",
    "!uv pip install --system -r $root/ComfyUI/requirements.txt\n",
    "!uv pip install --system torchao\n",
    "\n",
    "%cd ComfyUI\n",
    "%cd custom_nodes\n",
    "\n",
    "!git clone https://github.com/kijai/ComfyUI-WanVideoWrapper\n",
    "# !git clone https://github.com/crystian/ComfyUI-Crystools\n",
    "!git clone https://github.com/Kosinkadink/ComfyUI-VideoHelperSuite\n",
    "\n",
    "%cd ComfyUI-WanVideoWrapper\n",
    "\n",
    "!uv pip install --system -r requirements.txt\n",
    "!uv pip install --system sageattention\n",
    "\n",
    "# Download models\n",
    "!aria2c --console-log-level=error -c -x 16 -s 16 -k 1M https://huggingface.co/Kijai/WanVideo_comfy/resolve/main/umt5-xxl-enc-fp8_e4m3fn.safetensors -d $root/ComfyUI/models/text_encoders -o mt5.safetensors\n",
    "!aria2c --console-log-level=error -c -x 16 -s 16 -k 1M https://huggingface.co/Kijai/WanVideo_comfy/resolve/main/Wan2_1-I2V-14B-720P_fp8_e4m3fn.safetensors -d $root/ComfyUI/models/diffusion_models -o transformersI2V.safetensors\n",
    "!aria2c --console-log-level=error -c -x 16 -s 16 -k 1M https://huggingface.co/Kijai/WanVideo_comfy/resolve/main/Wan2_1-T2V-14B_fp8_e4m3fn.safetensors -d $root/ComfyUI/models/diffusion_models -o transformers.safetensors\n",
    "!aria2c --console-log-level=error -c -x 16 -s 16 -k 1M https://huggingface.co/Kijai/WanVideo_comfy/resolve/main/Wan2_1_VAE_bf16.safetensors -d $root/ComfyUI/models/vae -o vae.safetensors\n",
    "\n",
    "# %cd $root/ComfyUI/models\n",
    "# !mkdir -p LLM\n",
    "# %cd LLM\n",
    "# !git clone https://huggingface.co/xtuner/llava-llama-3-8b-v1_1-transformers\n",
    "# this part is not stble, you should use the auto download loader in workflow to download text(image) encode model\n",
    "\n",
    "%cd $root/ComfyUI/custom_nodes\n",
    "\n",
    "# !uv pip install --system -r $root/ComfyUI/custom_nodes/ComfyUI-Crystools/requirements.txt\n",
    "!uv pip install --system -r $root/ComfyUI/custom_nodes/ComfyUI-VideoHelperSuite/requirements.txt\n",
    "\n",
    "!apt install ffmpeg -y\n",
    "\n",
    "%cd $root/ComfyUI\n",
    "!python main.py --listen 0.0.0.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!rm -r /workspace/ComfyUI/models/LLM/llava-llama-3-8b-v1_1-transformers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " 16%|███████                                     | 8/50 [01:57<08:21, 11.93s/it]"
     ]
    }
   ],
   "source": [
    "%cd /workspace/ComfyUI\n",
    "!python main.py --listen 0.0.0.0"
   ]
  }
 ],
 "metadata": {
  "accelerator": "GPU",
  "colab": {
   "gpuType": "T4",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
